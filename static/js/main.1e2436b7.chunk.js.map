{"version":3,"sources":["components/Header.js","components/ToDoItem.js","components/AddNewItem.js","components/ToDoList.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","header","padding","spacing","fontFamily","fontSize","color","palette","info","light","textAlign","span","warning","Header","classes","className","Grid","item","xs","itemText","checkbox","backgroundColor","ToDoItem","text","handleComplete","value","ListItem","dense","button","ListItemIcon","Checkbox","edge","onChange","ListItemText","primary","form","margin","width","AddNewItem","handleSubmitKey","handleSubmitBtn","noValidate","autoComplete","onSubmit","TextField","id","label","variant","Button","startIcon","onClick","list","maxWidth","background","paper","ToDoList","useState","tasks","setTasks","useEffect","event","completedText","target","parentElement","nextSibling","children","innerText","find","element","complete","uncheckedTasks","filter","task","container","preventDefault","console","log","newTask","Math","floor","random","List","map","justifyContent","App","justify","Paper","elevation","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e2436b7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  header: {\n    padding: theme.spacing(2),\n    fontFamily: [\"Pacifico\", \"cursive\"],\n    fontSize: \"80px\",\n    color: theme.palette.info.light,\n    textAlign: \"center\",\n  },\n  span: {\n    color: theme.palette.warning.light,\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid item className={classes.header} xs={12}>\n        <p>\n          emily's <span className={classes.span}>to do</span> list\n        </p>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  makeStyles,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Checkbox,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  itemText: {\n    fontFamily: [\"Karla\", \"sans-serif\"],\n  },\n  checkbox: {\n    backgroundColor: theme.palette.info.light,\n  },\n}));\n\nexport default function ToDoItem({ text, handleComplete, value }) {\n  const classes = useStyles();\n\n  return (\n    <ListItem dense value={value} button>\n      <ListItemIcon>\n        <Checkbox\n          edge=\"start\"\n          onChange={handleComplete}\n          className={classes.checkbox}\n        />\n      </ListItemIcon>\n      <ListItemText primary={text} className={classes.itemText} />\n    </ListItem>\n  );\n}\n","import React from \"react\";\nimport { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  form: {\n    \"& > *\": {\n      margin: theme.spacing(2),\n      width: \"60ch\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function AddNewItem({ handleSubmitKey, handleSubmitBtn }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <form\n        className={classes.form}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmitKey}\n      >\n        <TextField\n          id=\"new-todo\"\n          label=\"Add new to do\"\n          variant=\"outlined\"\n          color=\"primary\"\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<AddIcon />}\n          onClick={handleSubmitBtn}\n        >\n          Add To Do\n        </Button>\n      </form>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, makeStyles, List } from \"@material-ui/core\";\nimport ToDoItem from \"./ToDoItem\";\nimport AddNewItem from \"./AddNewItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(5),\n  },\n  list: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ToDoList() {\n  const classes = useStyles();\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    if (!tasks) {\n      return;\n    }\n  }, [tasks]);\n\n  const handleComplete = (event) => {\n    const completedText =\n      event.target.parentElement.parentElement.parentElement.nextSibling\n        .children[0].innerText;\n    let completedTask = tasks.find((element) => element.text == completedText);\n    completedTask.complete = true;\n    const uncheckedTasks = tasks.filter((task) => task.complete === false);\n    setTasks([...uncheckedTasks]);\n  };\n\n  const handleSubmitKey = (event) => {\n    event.preventDefault();\n    console.log(event);\n    const newTaskText = event.target[0].value;\n    let newTask = {\n      text: newTaskText,\n      id: Math.floor(Math.random() * 10000),\n      complete: false,\n    };\n    setTasks([...tasks, newTask]);\n    event.target[0].value = \"\";\n  };\n\n  const handleSubmitBtn = (event) => {\n    const newTaskText = event.target.parentElement.parentElement[0].value;\n    let newTask = {\n      text: newTaskText,\n      id: Math.floor(Math.random() * 10000),\n      complete: false,\n    };\n    setTasks([...tasks, newTask]);\n    event.target.parentElement.parentElement[0].value = \"\";\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <AddNewItem\n          handleSubmitKey={handleSubmitKey}\n          handleSubmitBtn={handleSubmitBtn}\n        />\n        <List className={classes.list}>\n          {tasks.map((item) => (\n            <ToDoItem\n              key={item.id}\n              value={item.text}\n              text={item.text}\n              handleComplete={handleComplete}\n            />\n          ))}\n        </List>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Grid, Paper, makeStyles } from \"@material-ui/core\";\nimport Header from \"./components/Header\";\nimport ToDoList from \"./components/ToDoList\";\nimport \"./styles.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container justify=\"center\" xs={12} spacing={3}>\n        <Paper elevation={24} className={classes.paper}>\n          <Header />\n          <ToDoList />\n        </Paper>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}